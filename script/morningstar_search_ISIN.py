from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support.expected_conditions import element_to_be_clickable, presence_of_element_located

from  morningstar_utils import clickpopup
import datetime
import time
import os
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np

date = str(datetime.date.today())

link_search = 'https://www.morningstar.it/it/funds/SecuritySearchResults.aspx?type=ALL&search='
inputlist = ['LU0227439709','LU0804221488','LU0227440384','LU0677519224','LU0107999889','LU0262757841','LU0346933822','LU0677519067','LU0804229622','LU0947787866','LU0107991985','LU0346933400','LU1225037040','LU0283778867','LU0346934804','LU1225038527','LU1059393881','LU0108015834','LU0262753857','LU0499090040','LU0875155243','LU0795843555','LU0947787940','LU0499090636','LU0262758146','LU0383483962','LU0194809330','LU0947786975','LU0875154865','LU0283777620','LU1059392487','LU1416651542','LU0499091444','LU0180869991','LU1867654516','LU0875155086','LU0875156308','LU0346934713','LU0947788245','LU1621767737','LU0262756447','LU0677515313','LU0875156563','LU0677517798','LU1416656699','LU0107996786','LU1621765012','LU1225038790','LU0107998642','LU1379822932','LU0108019232','LU0107995895','LU0947788328','LU1059392560','LU0262760399','LU0262756280','LU0283779246','LU1621767901','LU0677529611','LU0262760639','LU0262754079','LU1416663125','LU0677534298','LU0499090800','LU0430499334','LU0795843639','LU0262753261','LU0262753428','LU0262755043','LU0499091527','LU0875154600','LU0875156134','LU0108016568','LU1225037123','LU0677533720','LU1059394269','LU0947787197','LU1647859559','LU0107998725','LU0538790550','LU0499090396','LU1105491218','LU0409725958','LU0383490827','LU0262754319','LU0262758658','LU1059392990','LU0283778354','LU0107997081','LU0262755712','LU0194809413','LU1267078191','LU1059393964','LU0108018770','LU0677515156','LU1867654789','LU0738951036','LU0180870494','LU0947790142','LU0677517103','LU0738948834','LU1059393022','LU1621765525','LU1059393451','LU0677532599','LU0738948750','LU0283776226','LU1621764395','LU1379823070','LU0108018853','LU0677516717','LU0538790980','LU0875154436','LU0947789565','LU0875155912','LU1621764049','LU0947790225','LU0677531781','LU0947787437','LU1225038956','LU1267078274','LU1529678291','LU1225037479','LU0677518846','LU1379823153','LU1867654276','LU1621764635','LU0499090123','LU0738951119','LU1225037800','LU0677531435','LU0409726170','LU0677517442','LU0947789649','LU0430499508','LU0108016642','LU1416657580','LU1416654215','LU0262755985','LU0677532086','LU0262755472','LU0875155755','LU1267078357','LU0738947430','LU0677529371','LU1868737427','LU0262757098','LU1225037552','LU0738951549','LU1621767810','LU0804222296','LU0262754400','LU1868737690','LU1621766093','LU1225039095','LU1621765285','LU1867654359','LU0686437244','LU0947787510','LU0947786462','LU0947792270','LU1059391919','LU1059393535','LU0262761108','LU1422848470','LU0108019315','LU1267077201','LU0499090552','LU0262760985','LU1868738151','LU0677533480','LU0346934556','LU0346933079','LU0346932691','LU1868737856','LU1059391083','LU0738951622','LU1267077110','LU1225037982','LU0283776903','LU0947786116','LU1225037636','LU1267077623','LU0795844959','LU0262758815','LU0795844876','LU0795845337','LU0804221991','LU0947786546','LU1267077540','LU0262757411','LU1225037719','LU1267078431','LU0947788757','LU0738948248','LU1379823237','LU0686437087','LU1621768115','LU1867653468','LU0346934630','LU0947788831','LU1621766176','LU0804230471','LU0795845253','LU1867654607','LU1267077383','LU1529678457','LU1059392057','LU0499090982','LU1105491309','LU1105491648','LU1059390275','LU0804230125','LU1867653385','LU1059391166','LU1422848637','LU0499091287','LU1225038287','LU1225038014','LU1868738664','LU1621764809','LU1529678887','LU0738948321','LU0738947513','LU1267077979','LU0804222965','LU1267077896','LU1621766333','LU1621766416','LU0875154279','LU1868738235','LU1422848553','LU1105491721','LU0947791546','LU1232063716','LU1422848710','LU0947789219','LU1621765798','LU1267077466','LU1529680198','LU0804229978','LU1059390358','LU1303499351','LU0804231107','LU1059390606','LU1059391596','LU1868737930','LU0677516477','LU0804221645','LU1868738078','LU1867654862','LU0947791975','LU1059390788','LU0875155599','LU0947789136','LU0947785571','LU0947785654','LU1868738318','LU1232063807','LU1303498973','LU1868738581','LU0499091790','LU0947785902','LU0738947869','LU1059391679','LU0738947943','LU0677516121',]

path = os.getcwd() + '/chromedriver'

isin_map = pd.DataFrame()

with webdriver.Chrome(path) as driver:
    wait = WebDriverWait(driver, 10)
    
    for input_isin in inputlist:
        print(input_isin)
        driver.get(str(link_search + input_isin))

       clickpopup(driver)
        
        body = wait.until(presence_of_element_located((By.CSS_SELECTOR, "tbody")))
        try:
            page_html = body.get_attribute('innerHTML')
        except:
            print('sleeping')
            time.sleep(10)
            page_html = body.get_attribute('innerHTML')

        soap = BeautifulSoup(page_html, 'html.parser')
        try:
            news = soap.find("tr" ,{'class' : 'gridItem'})
            link = news.find("a")['href']
        except:
            link = 'missing'
            
        row_dict = { 'isin': input_isin, 'link': link}
        isin_map = isin_map.append([row_dict])
        print(link)

    isin_map.to_csv('isin_map.csv')